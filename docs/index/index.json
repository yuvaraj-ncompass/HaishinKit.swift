{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodec\/delegate","title":"var delegate: (AudioCodecDelegate)?","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodec\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodec\/settings","title":"var settings: AudioCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodec\/appendsamplebuffer(_:offset:)","title":"func appendSampleBuffer(CMSampleBuffer, offset: Int)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodec\/error\/failedtoconvert(error:)","title":"case failedToConvert(error: NSError)","type":"case"},{"path":"\/documentation\/haishinkit\/audiocodec\/error\/failedtocreate(from:to:)","title":"case failedToCreate(from: AVAudioFormat, to: AVAudioFormat)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodec\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/audiocodec\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/audiocodec\/error","title":"AudioCodec.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodec\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/audiocodec\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/audiocodec\/running-implementations","title":"Running Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/audiocodec","title":"AudioCodec","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audioeffect\/execute(_:presentationtimestamp:)","title":"func execute(AVAudioBuffer, presentationTimeStamp: CMTime)","type":"method"}],"path":"\/documentation\/haishinkit\/audioeffect","title":"AudioEffect","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/haishinkit\/bytearray\/init(data:)","title":"init(data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/bytesavailable","title":"var bytesAvailable: Int","type":"property"},{"path":"\/documentation\/haishinkit\/bytearray\/length","title":"var length: Int","type":"property"},{"path":"\/documentation\/haishinkit\/bytearray\/position","title":"var position: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/clear()","title":"func clear() -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readdouble()","title":"func readDouble() throws -> Double","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readfloat()","title":"func readFloat() throws -> Float","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readint16()","title":"func readInt16() throws -> Int16","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readint32()","title":"func readInt32() throws -> Int32","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readint64()","title":"func readInt64() throws -> Int64","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readint8()","title":"func readInt8() throws -> Int8","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readuint16()","title":"func readUInt16() throws -> UInt16","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readuint24()","title":"func readUInt24() throws -> UInt32","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readuint32()","title":"func readUInt32() throws -> UInt32","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readuint64()","title":"func readUInt64() throws -> UInt64","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readuint8()","title":"func readUInt8() throws -> UInt8","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/readutf8()","title":"func readUTF8() throws -> String","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writedouble(_:)","title":"func writeDouble(Double) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writefloat(_:)","title":"func writeFloat(Float) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeint16(_:)","title":"func writeInt16(Int16) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeint32(_:)","title":"func writeInt32(Int32) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeint64(_:)","title":"func writeInt64(Int64) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeint8(_:)","title":"func writeInt8(Int8) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeuint16(_:)","title":"func writeUInt16(UInt16) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeuint24(_:)","title":"func writeUInt24(UInt32) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeuint32(_:)","title":"func writeUInt32(UInt32) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeuint64(_:)","title":"func writeUInt64(UInt64) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeuint8(_:)","title":"func writeUInt8(UInt8) -> Self","type":"method"},{"path":"\/documentation\/haishinkit\/bytearray\/writeutf8(_:)","title":"func writeUTF8(String) throws -> Self","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/subscript(_:)","title":"subscript(Int) -> UInt8","type":"subscript"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/error\/eof","title":"case eof","type":"case"},{"path":"\/documentation\/haishinkit\/bytearray\/error\/parse","title":"case parse","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/bytearray\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/bytearray\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/bytearray\/error","title":"ByteArray.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/bytearray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/bytearray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/bytearray","title":"ByteArray","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/name\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"path":"\/documentation\/haishinkit\/event\/name\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/name\/rawvalue-swift.property","title":"let rawValue: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/name\/rawvalue-swift.typealias","title":"Event.Name.RawValue","type":"typealias"},{"path":"\/documentation\/haishinkit\/event\/name\/stringliteraltype","title":"Event.Name.StringLiteralType","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/name\/event","title":"static let event: Event.Name","type":"property"},{"path":"\/documentation\/haishinkit\/event\/name\/ioerror","title":"static let ioError: Event.Name","type":"property"},{"path":"\/documentation\/haishinkit\/event\/name\/rtmpstatus","title":"static let rtmpStatus: Event.Name","type":"property"},{"path":"\/documentation\/haishinkit\/event\/name\/sync","title":"static let sync: Event.Name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/name\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/haishinkit\/event\/name\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/name\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/haishinkit\/event\/name\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/event\/name","title":"Event.Name","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/init(type:bubbles:data:)","title":"init(type: Event.Name, bubbles: Bool, data: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/bubbles","title":"var bubbles: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/event\/data","title":"var data: Any?","type":"property"},{"path":"\/documentation\/haishinkit\/event\/target","title":"var target: AnyObject?","type":"property"},{"path":"\/documentation\/haishinkit\/event\/type","title":"var type: Event.Name","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/from(_:)","title":"static func from(Notification) -> Event","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/event\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/event\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/event","title":"Event","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/eventdispatcher\/init()","title":"init()","type":"init"},{"path":"\/documentation\/haishinkit\/eventdispatcher\/init(target:)","title":"init(target: AnyObject)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/eventdispatcher\/addeventlistener(_:selector:observer:usecapture:)","title":"func addEventListener(Event.Name, selector: Selector, observer: AnyObject?, useCapture: Bool)","type":"method"},{"path":"\/documentation\/haishinkit\/eventdispatcher\/dispatch(_:bubbles:data:)","title":"func dispatch(Event.Name, bubbles: Bool, data: Any?)","type":"method"},{"path":"\/documentation\/haishinkit\/eventdispatcher\/dispatch(event:)","title":"func dispatch(event: Event)","type":"method"},{"path":"\/documentation\/haishinkit\/eventdispatcher\/removeeventlistener(_:selector:observer:usecapture:)","title":"func removeEventListener(Event.Name, selector: Selector, observer: AnyObject?, useCapture: Bool)","type":"method"}],"path":"\/documentation\/haishinkit\/eventdispatcher","title":"EventDispatcher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/hkview\/init(frame:)","title":"init(frame: NSRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkview\/videoformatdescription","title":"var videoFormatDescription: CMVideoFormatDescription?","type":"property"},{"path":"\/documentation\/haishinkit\/hkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/hkview\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkview\/defaultbackgroundcolor","title":"static var defaultBackgroundColor: NSColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hkview\/attachstream(_:)","title":"func attachStream(NetStream?)","type":"method"},{"path":"\/documentation\/haishinkit\/hkview\/enqueue(_:)","title":"func enqueue(CMSampleBuffer?)","type":"method"}],"path":"\/documentation\/haishinkit\/hkview\/netstreamdrawable-implementations","title":"NetStreamDrawable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/hkview","title":"HKView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/hlsservice\/addhttpstream(_:)","title":"func addHTTPStream(HTTPStream)","type":"method"},{"path":"\/documentation\/haishinkit\/hlsservice\/get(_:client:)","title":"func get(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/hlsservice\/removehttpstream(_:)","title":"func removeHTTPStream(HTTPStream)","type":"method"}],"path":"\/documentation\/haishinkit\/hlsservice","title":"HLSService","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httpservice\/connect(_:client:)","title":"func connect(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/delete(_:client:)","title":"func delete(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/get(_:client:)","title":"func get(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/head(_:client:)","title":"func head(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/options(_:client:)","title":"func options(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/post(_:client:)","title":"func post(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/put(_:client:)","title":"func put(HTTPRequest, client: NetClient)","type":"method"},{"path":"\/documentation\/haishinkit\/httpservice\/trace(_:client:)","title":"func trace(HTTPRequest, client: NetClient)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httpservice\/defaultdocument","title":"class var defaultDocument: String","type":"property"},{"path":"\/documentation\/haishinkit\/httpservice\/defaultport","title":"class var defaultPort: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/httpservice\/type","title":"class var type: String","type":"property"}],"path":"\/documentation\/haishinkit\/httpservice","title":"HTTPService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httpstream\/expectedmedias","title":"var expectedMedias: Set<AVMediaType>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httpstream\/attachaudio(_:automaticallyconfiguresapplicationaudiosession:onerror:)","title":"func attachAudio(AVCaptureDevice?, automaticallyConfiguresApplicationAudioSession: Bool, onError: ((Error) -> Void)?)","type":"method"},{"path":"\/documentation\/haishinkit\/httpstream\/attachcamera(_:onerror:)","title":"func attachCamera(AVCaptureDevice?, onError: ((Error) -> Void)?)","type":"method"},{"path":"\/documentation\/haishinkit\/httpstream\/publish(_:)","title":"func publish(String?)","type":"method"}],"path":"\/documentation\/haishinkit\/httpstream","title":"HTTPStream","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iomixer\/drawable","title":"var drawable: (NetStreamDrawable)?","type":"property"},{"path":"\/documentation\/haishinkit\/iomixer\/hasvideo","title":"var hasVideo: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/iomixer\/ispaused","title":"var isPaused: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/iomixer\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"path":"\/documentation\/haishinkit\/iomixer\/recorder","title":"var recorder: IORecorder","type":"property"},{"path":"\/documentation\/haishinkit\/iomixer\/session","title":"var session: AVCaptureSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iomixer\/appendsamplebuffer(_:)","title":"func appendSampleBuffer(CMSampleBuffer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iomixer\/audioengineholder","title":"static let audioEngineHolder: InstanceHolder<AVAudioEngine>","type":"property"},{"path":"\/documentation\/haishinkit\/iomixer\/defaultframerate","title":"static let defaultFrameRate: Float64","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iomixer\/startdecoding()","title":"func startDecoding()","type":"method"},{"path":"\/documentation\/haishinkit\/iomixer\/stopdecoding()","title":"func stopDecoding()","type":"method"}],"path":"\/documentation\/haishinkit\/iomixer\/iounitdecoding-implementations","title":"IOUnitDecoding Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iomixer\/startencoding(_:)","title":"func startEncoding(AVCodecDelegate)","type":"method"},{"path":"\/documentation\/haishinkit\/iomixer\/stopencoding()","title":"func stopEncoding()","type":"method"}],"path":"\/documentation\/haishinkit\/iomixer\/iounitencoding-implementations","title":"IOUnitEncoding Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iomixer\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/iomixer\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/iomixer\/running-implementations","title":"Running Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/iomixer","title":"IOMixer","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorder\/delegate","title":"var delegate: (IORecorderDelegate)?","type":"property"},{"path":"\/documentation\/haishinkit\/iorecorder\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"path":"\/documentation\/haishinkit\/iorecorder\/outputsettings","title":"var outputSettings: [AVMediaType : [String : Any]]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorder\/appendpixelbuffer(_:withpresentationtime:)","title":"func appendPixelBuffer(CVPixelBuffer, withPresentationTime: CMTime)","type":"method"},{"path":"\/documentation\/haishinkit\/iorecorder\/appendsamplebuffer(_:)","title":"func appendSampleBuffer(CMSampleBuffer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorder\/defaultoutputsettings","title":"static let defaultOutputSettings: [AVMediaType : [String : Any]]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorder\/error\/failedtoappend(error:)","title":"case failedToAppend(error: Error?)","type":"case"},{"path":"\/documentation\/haishinkit\/iorecorder\/error\/failedtocreateassetwriter(error:)","title":"case failedToCreateAssetWriter(error: Error)","type":"case"},{"path":"\/documentation\/haishinkit\/iorecorder\/error\/failedtocreateassetwriterinput(error:)","title":"case failedToCreateAssetWriterInput(error: NSException)","type":"case"},{"path":"\/documentation\/haishinkit\/iorecorder\/error\/failedtofinishwriting(error:)","title":"case failedToFinishWriting(error: Error?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/iorecorder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/iorecorder\/error","title":"IORecorder.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorder\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/iorecorder\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/iorecorder\/running-implementations","title":"Running Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/iorecorder","title":"IORecorder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iovideocaptureunit\/device","title":"var device: AVCaptureDevice?","type":"property"},{"path":"\/documentation\/haishinkit\/iovideocaptureunit\/isvideomirrored","title":"var isVideoMirrored: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/iovideocaptureunit\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iovideocaptureunit\/defaultvideosettings","title":"static let defaultVideoSettings: [NSString : AnyObject]","type":"property"}],"path":"\/documentation\/haishinkit\/iovideocaptureunit","title":"IOVideoCaptureUnit","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/instanceholder\/init(factory:)","title":"init(factory: () -> T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/instanceholder\/release(_:)","title":"func release(T?)","type":"method"},{"path":"\/documentation\/haishinkit\/instanceholder\/retain()","title":"func retain() -> T?","type":"method"}],"path":"\/documentation\/haishinkit\/instanceholder","title":"InstanceHolder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/init(coder:)","title":"init(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/mthkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/ismirrored","title":"var isMirrored: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videoformatdescription","title":"var videoFormatDescription: CMVideoFormatDescription?","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/mthkview\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/draw(in:)","title":"func draw(in: MTKView)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/mtkview(_:drawablesizewillchange:)","title":"func mtkView(MTKView, drawableSizeWillChange: CGSize)","type":"method"}],"path":"\/documentation\/haishinkit\/mthkview\/mtkviewdelegate-implementations","title":"MTKViewDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/mthkview\/attachstream(_:)","title":"func attachStream(NetStream?)","type":"method"},{"path":"\/documentation\/haishinkit\/mthkview\/enqueue(_:)","title":"func enqueue(CMSampleBuffer?)","type":"method"}],"path":"\/documentation\/haishinkit\/mthkview\/netstreamdrawable-implementations","title":"NetStreamDrawable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/mthkview","title":"MTHKView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netclient\/listen()","title":"func listen()","type":"method"}],"path":"\/documentation\/haishinkit\/netclient","title":"NetClient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netservice\/init(domain:type:name:port:)","title":"init(domain: String, type: String, name: String, port: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netservice\/clients","title":"var clients: [NetClient]","type":"property"},{"path":"\/documentation\/haishinkit\/netservice\/domain","title":"let domain: String","type":"property"},{"path":"\/documentation\/haishinkit\/netservice\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"path":"\/documentation\/haishinkit\/netservice\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/haishinkit\/netservice\/port","title":"let port: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/netservice\/txtdata","title":"var txtData: Data?","type":"property"},{"path":"\/documentation\/haishinkit\/netservice\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netservice\/netservice(_:didacceptconnectionwith:outputstream:)","title":"func netService(NetService, didAcceptConnectionWith: InputStream, outputStream: OutputStream)","type":"method"}],"path":"\/documentation\/haishinkit\/netservice\/netservicedelegate-implementations","title":"NetServiceDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netservice\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/netservice\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/netservice\/running-implementations","title":"Running Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/netservice","title":"NetService","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netsocket\/connected","title":"var connected: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/inputbuffer","title":"var inputBuffer: Data","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/outputbuffersize","title":"var outputBufferSize: Int","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/qualityofservice","title":"var qualityOfService: DispatchQoS","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/queuebytesout","title":"var queueBytesOut: Atomic<Int64>","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/securitylevel","title":"var securityLevel: StreamSocketSecurityLevel","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/timeout","title":"var timeout: Int","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/totalbytesin","title":"var totalBytesIn: Atomic<Int64>","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/totalbytesout","title":"var totalBytesOut: Atomic<Int64>","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/windowsizec","title":"var windowSizeC: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netsocket\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/haishinkit\/netsocket\/connect(withname:port:)","title":"func connect(withName: String, port: Int)","type":"method"},{"path":"\/documentation\/haishinkit\/netsocket\/dooutput(data:locked:)","title":"func doOutput(data: Data, locked: UnsafeMutablePointer<UInt32>?) -> Int","type":"method"},{"path":"\/documentation\/haishinkit\/netsocket\/listen()","title":"func listen()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netsocket\/defaulttimeout","title":"static let defaultTimeout: Int","type":"property"},{"path":"\/documentation\/haishinkit\/netsocket\/defaultwindowsizec","title":"static let defaultWindowSizeC: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netsocket\/stream(_:handle:)","title":"func stream(Stream, handle: Stream.Event)","type":"method"}],"path":"\/documentation\/haishinkit\/netsocket\/streamdelegate-implementations","title":"StreamDelegate Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/netsocket","title":"NetSocket","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstream\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstream\/audiosettings","title":"var audioSettings: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/context","title":"var context: CIContext","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/delegate","title":"var delegate: (NetStreamDelegate)?","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/framerate","title":"var frameRate: Float64","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/hasaudio","title":"var hasAudio: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/hasvideo","title":"var hasVideo: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/lockqueue","title":"let lockQueue: DispatchQueue","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/loopback","title":"var loopback: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/mixer","title":"var mixer: IOMixer","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/multicamcapturesettings","title":"var multiCamCaptureSettings: MultiCamCaptureSettings","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/sessionpreset","title":"var sessionPreset: AVCaptureSession.Preset","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/torch","title":"var torch: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"path":"\/documentation\/haishinkit\/netstream\/videosettings","title":"var videoSettings: VideoCodecSettings","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstream\/appendsamplebuffer(_:options:)","title":"func appendSampleBuffer(CMSampleBuffer, options: [NSObject : AnyObject]?)","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/attachaudio(_:automaticallyconfiguresapplicationaudiosession:onerror:)","title":"func attachAudio(AVCaptureDevice?, automaticallyConfiguresApplicationAudioSession: Bool, onError: ((Error) -> Void)?)","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/attachcamera(_:onerror:)","title":"func attachCamera(AVCaptureDevice?, onError: ((Error) -> Void)?)","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/attachmulticamera(_:onerror:)","title":"func attachMultiCamera(AVCaptureDevice?, onError: ((Error) -> Void)?)","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/attachscreen(_:)","title":"func attachScreen(AVCaptureScreenInput?)","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/registeraudioeffect(_:)","title":"func registerAudioEffect(AudioEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/registervideoeffect(_:)","title":"func registerVideoEffect(VideoEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/startrecording(_:)","title":"func startRecording([AVMediaType : [String : Any]])","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/stoprecording()","title":"func stopRecording()","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/unregisteraudioeffect(_:)","title":"func unregisterAudioEffect(AudioEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/unregistervideoeffect(_:)","title":"func unregisterVideoEffect(VideoEffect) -> Bool","type":"method"},{"path":"\/documentation\/haishinkit\/netstream\/videocapture(for:)","title":"func videoCapture(for: Int) -> IOVideoCaptureUnit?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstream\/session(_:didoutput:presentationtime:)","title":"func session(IOScreenCaptureUnit, didOutput: CVPixelBuffer, presentationTime: CMTime)","type":"method"}],"path":"\/documentation\/haishinkit\/netstream\/ioscreencaptureunitdelegate-implementations","title":"IOScreenCaptureUnitDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstream\/stream(_:didoutputsamplebuffer:of:)","title":"func stream(SCStream, didOutputSampleBuffer: CMSampleBuffer, of: SCStreamOutputType)","type":"method"}],"path":"\/documentation\/haishinkit\/netstream\/scstreamoutput-implementations","title":"SCStreamOutput Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/netstream","title":"NetStream","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/haishinkit\/piphkview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/videoformatdescription","title":"var videoFormatDescription: CMVideoFormatDescription?","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videogravity","title":"var videoGravity: AVLayerVideoGravity","type":"property"},{"path":"\/documentation\/haishinkit\/piphkview\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/defaultbackgroundcolor","title":"static var defaultBackgroundColor: NSColor","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/piphkview\/attachstream(_:)","title":"func attachStream(NetStream?)","type":"method"},{"path":"\/documentation\/haishinkit\/piphkview\/enqueue(_:)","title":"func enqueue(CMSampleBuffer?)","type":"method"}],"path":"\/documentation\/haishinkit\/piphkview\/netstreamdrawable-implementations","title":"NetStreamDrawable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/piphkview","title":"PiPHKView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/chunksize","title":"var chunkSize: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connected","title":"var connected: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/currentbytesinpersecond","title":"var currentBytesInPerSecond: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/currentbytesoutpersecond","title":"var currentBytesOutPerSecond: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/delegate","title":"var delegate: (RTMPConnectionDelegate)?","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/flashver","title":"var flashVer: String","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/pageurl","title":"var pageUrl: String?","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/parameters","title":"var parameters: Any?","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/previousqueuebytesout","title":"var previousQueueBytesOut: [Int64]","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/qualityofservice","title":"var qualityOfService: DispatchQoS","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/requirenetworkframework","title":"var requireNetworkFramework: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/swfurl","title":"var swfUrl: String?","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/timeout","title":"var timeout: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/totalbytesin","title":"var totalBytesIn: Int64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/totalbytesout","title":"var totalBytesOut: Int64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/totalstreamscount","title":"var totalStreamsCount: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/uri","title":"var uri: URL?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/call(_:responder:arguments:)","title":"func call(String, responder: RTMPResponder?, arguments: Any?...)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/connect(_:arguments:)","title":"func connect(String, arguments: Any?...)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultcapabilities","title":"static let defaultCapabilities: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultchunksizes","title":"static let defaultChunkSizeS: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultflashver","title":"static let defaultFlashVer: String","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultobjectencoding","title":"static let defaultObjectEncoding: RTMPObjectEncoding","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultport","title":"static let defaultPort: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultsecureport","title":"static let defaultSecurePort: Int","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/defaultwindowsizes","title":"static let defaultWindowSizeS: Int64","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/supportedprotocols","title":"static let supportedProtocols: Set<String>","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callbadversion","title":"case callBadVersion","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callfailed","title":"case callFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/callprohibited","title":"case callProhibited","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectappshutdown","title":"case connectAppshutdown","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectclosed","title":"case connectClosed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectfailed","title":"case connectFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectidletimeout","title":"case connectIdleTimeOut","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectinvalidapp","title":"case connectInvalidApp","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectnetworkchange","title":"case connectNetworkChange","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectrejected","title":"case connectRejected","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/connectsuccess","title":"case connectSuccess","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/level","title":"var level: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpconnection\/code","title":"RTMPConnection.Code","type":"enum"}],"path":"\/documentation\/haishinkit\/rtmpconnection","title":"RTMPConnection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpresponder\/init(result:status:)","title":"init(result: RTMPResponder.Handler, status: RTMPResponder.Handler?)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpresponder\/handler","title":"RTMPResponder.Handler","type":"typealias"}],"path":"\/documentation\/haishinkit\/rtmpresponder","title":"RTMPResponder","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/data","title":"var data: [String : Any?]","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/objectencoding","title":"let objectEncoding: RTMPObjectEncoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/connect(_:)","title":"func connect(RTMPConnection)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/setproperty(_:_:)","title":"func setProperty(String, Any?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/getremote(withname:remotepath:persistence:)","title":"static func getRemote(withName: String, remotePath: String, persistence: Bool) -> RTMPSharedObject","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpsharedobject\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpsharedobject","title":"RTMPSharedObject","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/init(connection:)","title":"init(connection: RTMPConnection)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/currentfps","title":"var currentFPS: UInt16","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/info","title":"var info: RTMPStreamInfo","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/objectencoding","title":"var objectEncoding: RTMPObjectEncoding","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/paused","title":"var paused: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receiveaudio","title":"var receiveAudio: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/receivevideo","title":"var receiveVideo: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstream\/soundtransform","title":"var soundTransform: SoundTransform","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/createmetadata()","title":"func createMetaData() -> ASObject","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/play(_:)","title":"func play(Any?...)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/publish(_:type:)","title":"func publish(String?, type: RTMPStream.HowToPublish)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/seek(_:)","title":"func seek(Double)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/send(handlername:arguments:)","title":"func send(handlerName: String, arguments: Any?...)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferempty","title":"case bufferEmpty","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferflush","title":"case bufferFlush","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/bufferfull","title":"case bufferFull","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectclosed","title":"case connectClosed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectfailed","title":"case connectFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectrejected","title":"case connectRejected","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/connectsuccess","title":"case connectSuccess","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/drmupdateneeded","title":"case drmUpdateNeeded","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/multicaststreamreset","title":"case multicastStreamReset","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/pausenotify","title":"case pauseNotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfailed","title":"case playFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playfilestructureinvalid","title":"case playFileStructureInvalid","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playinsufficientbw","title":"case playInsufficientBW","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playnosupportedtrackfound","title":"case playNoSupportedTrackFound","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playreset","title":"case playReset","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstart","title":"case playStart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstop","title":"case playStop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playstreamnotfound","title":"case playStreamNotFound","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playtransition","title":"case playTransition","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/playunpublishnotify","title":"case playUnpublishNotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishbadname","title":"case publishBadName","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishidle","title":"case publishIdle","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/publishstart","title":"case publishStart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordalreadyexists","title":"case recordAlreadyExists","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recorddiskquotaexceeded","title":"case recordDiskQuotaExceeded","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordfailed","title":"case recordFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordnoaccess","title":"case recordNoAccess","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstart","title":"case recordStart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/recordstop","title":"case recordStop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstart","title":"case secondScreenStart","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/secondscreenstop","title":"case secondScreenStop","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekfailed","title":"case seekFailed","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seekinvalidtime","title":"case seekInvalidTime","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/seeknotify","title":"case seekNotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/stepnotify","title":"case stepNotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpausenotify","title":"case unpauseNotify","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/unpublishsuccess","title":"case unpublishSuccess","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/videodimensionchange","title":"case videoDimensionChange","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/level","title":"var level: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/code\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstream\/code","title":"RTMPStream.Code","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/append","title":"case append","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/appendwithgap","title":"case appendWithGap","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/live","title":"case live","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/record","title":"case record","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstream\/howtopublish","title":"RTMPStream.HowToPublish","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstream\/addeventlistener(_:selector:observer:usecapture:)","title":"func addEventListener(Event.Name, selector: Selector, observer: AnyObject?, useCapture: Bool)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(_:bubbles:data:)","title":"func dispatch(Event.Name, bubbles: Bool, data: Any?)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/dispatch(event:)","title":"func dispatch(event: Event)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpstream\/removeeventlistener(_:selector:observer:usecapture:)","title":"func removeEventListener(Event.Name, selector: Selector, observer: AnyObject?, useCapture: Bool)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpstream\/eventdispatcherconvertible-implementations","title":"EventDispatcherConvertible Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstream","title":"RTMPStream","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/delegate","title":"var delegate: (TSReaderDelegate)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreader\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/haishinkit\/tsreader\/read(_:)","title":"func read(Data) -> Int","type":"method"}],"path":"\/documentation\/haishinkit\/tsreader","title":"TSReader","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/init(segmentduration:)","title":"init(segmentDuration: Double)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/delegate","title":"var delegate: (TSWriterDelegate)?","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/expectedmedias","title":"var expectedMedias: Set<AVMediaType>","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/stoprunning()","title":"func stopRunning()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/defaultaudiopid","title":"static let defaultAudioPID: UInt16","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/defaultpatpid","title":"static let defaultPATPID: UInt16","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/defaultpmtpid","title":"static let defaultPMTPID: UInt16","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/defaultsegmentduration","title":"static let defaultSegmentDuration: Double","type":"property"},{"path":"\/documentation\/haishinkit\/tswriter\/defaultvideopid","title":"static let defaultVideoPID: UInt16","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/audiocodec(_:didoutput:)","title":"func audioCodec(AudioCodec, didOutput: AVAudioFormat)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/audiocodec(_:didoutput:presentationtimestamp:)","title":"func audioCodec(AudioCodec, didOutput: AVAudioBuffer, presentationTimeStamp: CMTime)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/audiocodec(_:erroroccurred:)","title":"func audioCodec(AudioCodec, errorOccurred: AudioCodec.Error)","type":"method"}],"path":"\/documentation\/haishinkit\/tswriter\/audiocodecdelegate-implementations","title":"AudioCodecDelegate Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriter\/videocodec(_:didoutput:)-4cwlf","title":"func videoCodec(VideoCodec, didOutput: CMFormatDescription?)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/videocodec(_:didoutput:)-7embq","title":"func videoCodec(VideoCodec, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/videocodec(_:erroroccurred:)","title":"func videoCodec(VideoCodec, errorOccurred: VideoCodec.Error)","type":"method"},{"path":"\/documentation\/haishinkit\/tswriter\/videocodecwilldropfame(_:)","title":"func videoCodecWillDropFame(VideoCodec) -> Bool","type":"method"}],"path":"\/documentation\/haishinkit\/tswriter\/videocodecdelegate-implementations","title":"VideoCodecDelegate Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/tswriter","title":"TSWriter","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodec\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"path":"\/documentation\/haishinkit\/videocodec\/settings","title":"var settings: VideoCodecSettings","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodec\/defaultattributes","title":"static var defaultAttributes: [NSString : AnyObject]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodec\/error\/failedtocreate(status:)","title":"case failedToCreate(status: OSStatus)","type":"case"},{"path":"\/documentation\/haishinkit\/videocodec\/error\/failedtoflame(status:)","title":"case failedToFlame(status: OSStatus)","type":"case"},{"path":"\/documentation\/haishinkit\/videocodec\/error\/failedtoprepare(status:)","title":"case failedToPrepare(status: OSStatus)","type":"case"},{"path":"\/documentation\/haishinkit\/videocodec\/error\/failedtosetoption(status:option:)","title":"case failedToSetOption(status: OSStatus, option: VTSessionOption)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodec\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/videocodec\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodec\/error","title":"VideoCodec.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodec\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/videocodec\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/videocodec\/running-implementations","title":"Running Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodec","title":"VideoCodec","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/cicontext","title":"var ciContext: CIContext?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videoeffect\/execute(_:info:)","title":"func execute(CIImage, info: CMSampleBuffer?) -> CIImage","type":"method"}],"path":"\/documentation\/haishinkit\/videoeffect","title":"VideoEffect","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecdelegate\/audiocodec(_:didoutput:)","title":"func audioCodec(AudioCodec, didOutput: AVAudioFormat)","type":"method"},{"path":"\/documentation\/haishinkit\/audiocodecdelegate\/audiocodec(_:didoutput:presentationtimestamp:)","title":"func audioCodec(AudioCodec, didOutput: AVAudioBuffer, presentationTimeStamp: CMTime)","type":"method"},{"path":"\/documentation\/haishinkit\/audiocodecdelegate\/audiocodec(_:erroroccurred:)","title":"func audioCodec(AudioCodec, errorOccurred: AudioCodec.Error)","type":"method"}],"path":"\/documentation\/haishinkit\/audiocodecdelegate","title":"AudioCodecDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/eventdispatcherconvertible\/addeventlistener(_:selector:observer:usecapture:)","title":"func addEventListener(Event.Name, selector: Selector, observer: AnyObject?, useCapture: Bool)","type":"method"},{"path":"\/documentation\/haishinkit\/eventdispatcherconvertible\/dispatch(_:bubbles:data:)","title":"func dispatch(Event.Name, bubbles: Bool, data: Any?)","type":"method"},{"path":"\/documentation\/haishinkit\/eventdispatcherconvertible\/dispatch(event:)","title":"func dispatch(event: Event)","type":"method"},{"path":"\/documentation\/haishinkit\/eventdispatcherconvertible\/removeeventlistener(_:selector:observer:usecapture:)","title":"func removeEventListener(Event.Name, selector: Selector, observer: AnyObject?, useCapture: Bool)","type":"method"}],"path":"\/documentation\/haishinkit\/eventdispatcherconvertible","title":"EventDispatcherConvertible","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/iorecorderdelegate\/recorder(_:erroroccured:)","title":"func recorder(IORecorder, errorOccured: IORecorder.Error)","type":"method"},{"path":"\/documentation\/haishinkit\/iorecorderdelegate\/recorder(_:finishwriting:)","title":"func recorder(IORecorder, finishWriting: AVAssetWriter)","type":"method"}],"path":"\/documentation\/haishinkit\/iorecorderdelegate","title":"IORecorderDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/ioscreencaptureunit\/attributes","title":"var attributes: [NSString : NSObject]","type":"property"},{"path":"\/documentation\/haishinkit\/ioscreencaptureunit\/delegate","title":"var delegate: (IOScreenCaptureUnitDelegate)?","type":"property"}],"path":"\/documentation\/haishinkit\/ioscreencaptureunit","title":"IOScreenCaptureUnit","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/ioscreencaptureunitdelegate\/session(_:didoutput:presentationtime:)","title":"func session(IOScreenCaptureUnit, didOutput: CVPixelBuffer, presentationTime: CMTime)","type":"method"}],"path":"\/documentation\/haishinkit\/ioscreencaptureunitdelegate","title":"IOScreenCaptureUnitDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstreamdelegate\/stream(_:audiocodecerroroccurred:)","title":"func stream(NetStream, audioCodecErrorOccurred: AudioCodec.Error)","type":"method"},{"path":"\/documentation\/haishinkit\/netstreamdelegate\/stream(_:didoutput:)","title":"func stream(NetStream, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/netstreamdelegate\/stream(_:didoutput:presentationtimestamp:)","title":"func stream(NetStream, didOutput: AVAudioBuffer, presentationTimeStamp: CMTime)","type":"method"},{"path":"\/documentation\/haishinkit\/netstreamdelegate\/stream(_:videocodecerroroccurred:)","title":"func stream(NetStream, videoCodecErrorOccurred: VideoCodec.Error)","type":"method"},{"path":"\/documentation\/haishinkit\/netstreamdelegate\/streamdidopen(_:)","title":"func streamDidOpen(NetStream)","type":"method"},{"path":"\/documentation\/haishinkit\/netstreamdelegate\/streamwilldropframe(_:)","title":"func streamWillDropFrame(NetStream) -> Bool","type":"method"}],"path":"\/documentation\/haishinkit\/netstreamdelegate","title":"NetStreamDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstreamdrawable\/videoformatdescription","title":"var videoFormatDescription: CMVideoFormatDescription?","type":"property"},{"path":"\/documentation\/haishinkit\/netstreamdrawable\/videoorientation","title":"var videoOrientation: AVCaptureVideoOrientation","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/netstreamdrawable\/attachstream(_:)","title":"func attachStream(NetStream?)","type":"method"},{"path":"\/documentation\/haishinkit\/netstreamdrawable\/enqueue(_:)","title":"func enqueue(CMSampleBuffer?)","type":"method"}],"path":"\/documentation\/haishinkit\/netstreamdrawable","title":"NetStreamDrawable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpconnectiondelegate\/connection(_:publishinsufficientbwoccured:)","title":"func connection(RTMPConnection, publishInsufficientBWOccured: RTMPStream)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnectiondelegate\/connection(_:publishsufficientbwoccured:)","title":"func connection(RTMPConnection, publishSufficientBWOccured: RTMPStream)","type":"method"},{"path":"\/documentation\/haishinkit\/rtmpconnectiondelegate\/connection(_:updatestats:)","title":"func connection(RTMPConnection, updateStats: RTMPStream)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpconnectiondelegate","title":"RTMPConnectionDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/running\/isrunning","title":"var isRunning: Atomic<Bool>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/running\/startrunning()","title":"func startRunning()","type":"method"},{"path":"\/documentation\/haishinkit\/running\/stoprunning()","title":"func stopRunning()","type":"method"}],"path":"\/documentation\/haishinkit\/running","title":"Running","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tsreaderdelegate\/reader(_:id:didread:)-37ztb","title":"func reader(TSReader, id: UInt16, didRead: CMFormatDescription)","type":"method"},{"path":"\/documentation\/haishinkit\/tsreaderdelegate\/reader(_:id:didread:)-5kxz9","title":"func reader(TSReader, id: UInt16, didRead: CMSampleBuffer)","type":"method"}],"path":"\/documentation\/haishinkit\/tsreaderdelegate","title":"TSReaderDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/tswriterdelegate\/writer(_:didoutput:)","title":"func writer(TSWriter, didOutput: Data)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/haishinkit\/tswriterdelegate\/writer(_:didrotatefilehandle:)-17rsg","title":"func writer(TSWriter, didRotateFileHandle: CMTime)","type":"method"}],"title":"TSWriterDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/haishinkit\/tswriterdelegate\/writer(_:didrotatefilehandle:)-7ieyz","title":"func writer(TSWriter, didRotateFileHandle: CMTime)","type":"method"}],"path":"\/documentation\/haishinkit\/tswriterdelegate","title":"TSWriterDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecdelegate\/videocodec(_:didoutput:)-7sbpr","title":"func videoCodec(VideoCodec, didOutput: CMSampleBuffer)","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecdelegate\/videocodec(_:didoutput:)-879c7","title":"func videoCodec(VideoCodec, didOutput: CMFormatDescription?)","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecdelegate\/videocodec(_:erroroccurred:)","title":"func videoCodec(VideoCodec, errorOccurred: VideoCodec.Error)","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecdelegate\/videocodecwilldropfame(_:)","title":"func videoCodecWillDropFame(VideoCodec) -> Bool","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecdelegate","title":"VideoCodecDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asarray\/init(count:)","title":"init(count: Int)","type":"init"},{"path":"\/documentation\/haishinkit\/asarray\/init(data:)","title":"init(data: [Any?])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asarray\/length","title":"var length: Int","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asarray\/subscript(_:)","title":"subscript(Any) -> Any?","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/asarray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/asarray\/==(_:_:)","title":"static func == (ASArray, ASArray) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/asarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asarray\/init(arrayliteral:)","title":"init(arrayLiteral: Any?...)","type":"init"}],"path":"\/documentation\/haishinkit\/asarray\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/asarray","title":"ASArray","type":"struct"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/astypedobject\/typedobjectdecoder","title":"ASTypedObject.TypedObjectDecoder","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/astypedobject\/register(type:named:)","title":"static func register<T>(type: T.Type, named: String)","type":"method"},{"path":"\/documentation\/haishinkit\/astypedobject\/register(typenamed:decoder:)","title":"static func register(typeNamed: String, decoder: ASTypedObject.TypedObjectDecoder)","type":"method"},{"path":"\/documentation\/haishinkit\/astypedobject\/unregister(typenamed:)","title":"static func unregister(typeNamed: String)","type":"method"}],"path":"\/documentation\/haishinkit\/astypedobject","title":"ASTypedObject","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asundefined\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/haishinkit\/asundefined","title":"ASUndefined","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asxml\/init(data:)","title":"init(data: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asxml\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asxml\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/asxml\/==(_:_:)","title":"static func == (ASXML, ASXML) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/asxml\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/asxml","title":"ASXML","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asxmldocument\/init(data:)","title":"init(data: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asxmldocument\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asxmldocument\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/asxmldocument\/==(_:_:)","title":"static func == (ASXMLDocument, ASXMLDocument) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/asxmldocument\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/asxmldocument","title":"ASXMLDocument","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/atomic\/init(_:)","title":"init(A)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/atomic\/value","title":"var value: A","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/atomic\/mutate(_:)","title":"func mutate((inout A) -> Void)","type":"method"}],"path":"\/documentation\/haishinkit\/atomic","title":"Atomic","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(bitrate:outputchannelsmap:)","title":"init(bitRate: Int, outputChannelsMap: [Int : Int])","type":"init"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/bitrate","title":"var bitRate: Int","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/outputchannelsmap","title":"var outputChannelsMap: [Int : Int]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/default","title":"static let `default`: AudioCodecSettings","type":"property"},{"path":"\/documentation\/haishinkit\/audiocodecsettings\/maximumnumberofchannels","title":"static let maximumNumberOfChannels: UInt32","type":"property"}],"path":"\/documentation\/haishinkit\/audiocodecsettings","title":"AudioCodecSettings","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httprequest\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/haishinkit\/httprequest\/headerfields","title":"var headerFields: [String : String]","type":"property"},{"path":"\/documentation\/haishinkit\/httprequest\/method","title":"var method: String","type":"property"},{"path":"\/documentation\/haishinkit\/httprequest\/uri","title":"var uri: String","type":"property"},{"path":"\/documentation\/haishinkit\/httprequest\/version","title":"var version: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httprequest\/separator","title":"static let separator: UInt8","type":"property"}],"path":"\/documentation\/haishinkit\/httprequest","title":"HTTPRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httpresponse\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (String, String)...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/httpresponse\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/haishinkit\/httpresponse\/headerfields","title":"var headerFields: [String : String]","type":"property"},{"path":"\/documentation\/haishinkit\/httpresponse\/statuscode","title":"var statusCode: String","type":"property"},{"path":"\/documentation\/haishinkit\/httpresponse\/version","title":"var version: String","type":"property"}],"path":"\/documentation\/haishinkit\/httpresponse","title":"HTTPResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/init(mode:cornerradius:regionofinterest:direction:)","title":"init(mode: MultiCamCaptureSettings.Mode, cornerRadius: CGFloat, regionOfInterest: CGRect, direction: ImageTransform)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/cornerradius","title":"let cornerRadius: CGFloat","type":"property"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/direction","title":"let direction: ImageTransform","type":"property"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.property","title":"let mode: MultiCamCaptureSettings.Mode","type":"property"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/regionofinterest","title":"let regionOfInterest: CGRect","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/default","title":"static let `default`: MultiCamCaptureSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/pip","title":"case pip","type":"case"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/splitview","title":"case splitView","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/multicamcapturesettings\/mode-swift.enum","title":"MultiCamCaptureSettings.Mode","type":"enum"}],"path":"\/documentation\/haishinkit\/multicamcapturesettings","title":"MultiCamCaptureSettings","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/bytecount","title":"var byteCount: Atomic<Int64>","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/currentbytespersecond","title":"var currentBytesPerSecond: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/resourcename","title":"var resourceName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpstreaminfo","title":"RTMPStreamInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/pan","title":"var pan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/volume","title":"var volume: Float","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultpan","title":"static let defaultPan: Float","type":"property"},{"path":"\/documentation\/haishinkit\/soundtransform\/defaultvolume","title":"static let defaultVolume: Float","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/soundtransform\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/haishinkit\/soundtransform\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/soundtransform","title":"SoundTransform","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/==(_:_:)","title":"static func == (VTSessionOption, VTSessionOption) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/vtsessionoption\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/vtsessionoption\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/vtsessionoption","title":"VTSessionOption","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/init(videosize:profilelevel:bitrate:maxkeyframeintervalduration:scalingmode:bitratemode:allowframereordering:ishardwareencoderenabled:)","title":"init(videoSize: VideoSize, profileLevel: String, bitRate: UInt32, maxKeyFrameIntervalDuration: Int32, scalingMode: VideoCodecSettings.ScalingMode, bitRateMode: VideoCodecSettings.BitRateMode, allowFrameReordering: Bool?, isHardwareEncoderEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/allowframereordering","title":"var allowFrameReordering: Bool?","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitrate","title":"var bitRate: UInt32","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.property","title":"var bitRateMode: VideoCodecSettings.BitRateMode","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/ishardwareencoderenabled","title":"var isHardwareEncoderEnabled: Bool","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/maxkeyframeintervalduration","title":"var maxKeyFrameIntervalDuration: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/profilelevel","title":"var profileLevel: String","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.property","title":"var scalingMode: VideoCodecSettings.ScalingMode","type":"property"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/videosize","title":"var videoSize: VideoSize","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/default","title":"static let `default`: VideoCodecSettings","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/average","title":"case average","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/constant","title":"case constant","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/bitratemode-swift.enum","title":"VideoCodecSettings.BitRateMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/cropsourcetocleanaperture","title":"case cropSourceToCleanAperture","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/letterbox","title":"case letterbox","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/trim","title":"case trim","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videocodecsettings\/scalingmode-swift.enum","title":"VideoCodecSettings.ScalingMode","type":"enum"}],"path":"\/documentation\/haishinkit\/videocodecsettings","title":"VideoCodecSettings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videosize\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/haishinkit\/videosize\/init(width:height:)","title":"init(width: Int32, height: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videosize\/height","title":"let height: Int32","type":"property"},{"path":"\/documentation\/haishinkit\/videosize\/width","title":"let width: Int32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videosize\/swap()","title":"func swap() -> VideoSize","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/videosize\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/videosize\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/videosize","title":"VideoSize","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/kasundefined","title":"let kASUndefined: ASUndefined","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/asobject","title":"ASObject","type":"typealias"},{"path":"\/documentation\/haishinkit\/avcodecdelegate","title":"AVCodecDelegate","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/deviceutil\/device(withlocalizedname:mediatype:)","title":"static func device(withLocalizedName: String, mediaType: AVMediaType) -> AVCaptureDevice?","type":"method"}],"path":"\/documentation\/haishinkit\/deviceutil","title":"DeviceUtil","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagetransform\/east","title":"case east","type":"case"},{"path":"\/documentation\/haishinkit\/imagetransform\/north","title":"case north","type":"case"},{"path":"\/documentation\/haishinkit\/imagetransform\/south","title":"case south","type":"case"},{"path":"\/documentation\/haishinkit\/imagetransform\/west","title":"case west","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagetransform\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagetransform\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/imagetransform\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagetransform\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagetransform\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/imagetransform\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/haishinkit\/imagetransform\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/imagetransform\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/imagetransform","title":"ImageTransform","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf0","title":"case amf0","type":"case"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/amf3","title":"case amf3","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/init(rawvalue:)","title":"init?(rawValue: UInt8)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/haishinkit\/rtmpobjectencoding","title":"RTMPObjectEncoding","type":"enum"}],"path":"\/documentation\/haishinkit","title":"HaishinKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}